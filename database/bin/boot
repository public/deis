#!/bin/bash
#
# This script is designed to be run inside the container
#

# fail hard and fast even on pipelines
set -eo pipefail

# set debug based on envvar
[[ $DEBUG ]] && set -x

# configure etcd
export ETCD_PORT=${ETCD_PORT:-4001}
export ETCD="$HOST:$ETCD_PORT"
export ETCD_PATH=${ETCD_PATH:-/deis/database}
export ETCD_TTL=${ETCD_TTL:-10}

# wait for etcd to be available
until etcdctl --no-sync -C $ETCD ls >/dev/null; do
  echo "waiting for etcd at $ETCD..."
  sleep $(($ETCD_TTL/2))  # sleep for half the TTL
done

# wait until etcd has discarded potentially stale values
sleep $(($ETCD_TTL+1))

function etcd_safe_mkdir {
  etcdctl --no-sync -C $ETCD mkdir $1 >/dev/null 2>&1 || true
}

function etcd_safe_set {
  if ! etcdctl --no-sync -C $ETCD get $ETCD_PATH/$1 >/dev/null 2>&1; then
    etcdctl --no-sync -C $ETCD set $ETCD_PATH/$1 $2 >/dev/null
  fi
}

etcd_safe_mkdir /deis/database
etcd_safe_set engine postgresql_psycopg2
etcd_safe_set adminUser ${PG_ADMIN_USER:-postgres}
etcd_safe_set adminPass ${PG_ADMIN_PASS:-changeme123}
etcd_safe_set user ${PG_USER_NAME:-deis}
etcd_safe_set password ${PG_USER_PASS:-changeme123}
etcd_safe_set name ${PG_USER_DB:-deis}

# Generate a keypair and use it if we need to
ssh-keygen -q -t rsa -f /tmp/id_rsa -N '' -C postgres
etcdctl --no-sync -C $ETCD mk $ETCD_PATH/replicationKey < /tmp/id_rsa >/dev/null || true
etcdctl --no-sync -C $ETCD mk $ETCD_PATH/replicationPubKey < /tmp/id_rsa.pub >/dev/null || true
rm /tmp/id_rsa
rm /tmp/id_rsa.pub

# wait for confd to run once and install initial templates
until confd -onetime -node $ETCD -config-file /app/confd.toml; do
  echo "database: waiting for confd to write initial templates..."
  sleep $(($ETCD_TTL/2))  # sleep for half the TTL
done

# spawn confd in the background to update services based on etcd changes
confd -node $ETCD -config-file /app/confd.toml &
CONFD_PID=$!

if [[ ! -z $PUBLISH ]]; then
  set +e

  # configure service discovery
  PORT=${PORT:-5432}
  PROTO=${PROTO:-tcp}

  while true ; do

    # now, we try to become master
    if /app/bin/attempt_master; then
      /app/bin/promote_to_master
    else
      /app/bin/demote_to_slave
    fi

    etcdctl --no-sync -C $ETCD set /deis/database/$HOST/host $HOST --ttl $ETCD_TTL >/dev/null
    etcdctl --no-sync -C $ETCD set /deis/database/$HOST/port $PORT --ttl $ETCD_TTL >/dev/null

    # try it all again soon
    sleep $(($ETCD_TTL/2)) # sleep for half the TTL
  done
fi

exit
